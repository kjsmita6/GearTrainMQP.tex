
@book{holman_automated_2018,
	location = {Major Qualifying Project, Department of Mechanical Engineering},
	title = {Automated Generation of {SolidWorks} Assemblies of Gear-Trains and Linkages},
	abstract = {This project demonstrates the automated generation of Computer Aided Design ({CAD}) assemblies of gear trains and linkages in {SolidWorks}. Two standalone programs have been developed; one for generating gear trains and the other for generating planar linkages. Upon detailing sufficient information about individual parts and their assemblies in each case, the programs calculate design details and interfaces with the {SolidWorks} {API} to generate all the parts and their overall assembly with all the required mates. In the gear program, spur gears, helical gears, bevel gears, straight shafts and bearings can be generated along with a representative enclosure. In the linkage program, prismatic links, pin joints, spacers, covers, and axial constraints can be generated with a backing plate. Detailed processes as well as the benefits and challenges will be discussed. These programs can generate the models much faster than manually creating them.},
	publisher = {Worcester Polytechnic Institute},
	author = {Holman, Garrett and Okafor, Oluchukwu},
	date = {2018-04}
}

@online{kohara_gear_industry_introduction_2015,
	title = {Introduction to Gears},
	url = {https://khkgears.net/new/gear_knowledge/introduction_to_gears/},
	abstract = {Introduction to Gears offered by {KHK} is a text book to learn about gear technology, terminology and nomenclature. Let's study industrial gears !},
	author = {{Kohara Gear Industry}},
	date = {2015}
}

@book{looft_systems_2018,
	title = {Systems Engineering for Capstone Projects},
	abstract = {The purpose of this document is to help capstone project teams apply Systems Engineering ({SE}) principles to their project development activities. The format of this guide will be to present a brief discussion with one or more embedded team activity items denoted by a  for each {SE} life cycle topic covered in this booklet.},
	publisher = {Worcester Polytechnic Institute},
	author = {Looft, Fred J.},
	date = {2018-08}
}

@article{swantner_topological_2011,
	title = {Topological and Parametric Optimization of Gear Trains},
	volume = {44},
	doi = {10.1080/0305215X.2011.646264},
	abstract = {A method for automating the design of gear trains comprised of simple, compound, bevel and worm is described. The search process combines topological changes, discrete variable choices and continuous variable optimization. By combing best-first search, implicit enumeration, automated optimization invocation and gradient-based optimization, a near guarantee of the optimal solution can be made. While the combination of methods is specific to gear trains, there are aspects of the work that make it amenable to other engineering design problems. In addition, the topological and discrete modifications to the candidate solutions are specific to gear trains, but the graph grammar methodology that is adopted has been tailored to other problems. This article presents details on the rules that generate feasible gear trains, the evaluation routines used in determining the objective functions and constraints, and the interaction among the three search methods. Resulting gear trains are presented for a variety of gear problems.},
	pages = {1351--1368},
	number = {11},
	journaltitle = {Engineering Optimization},
	author = {Swantner, Albert and Campbell, Matthew I.},
	date = {2011-11}
}

@online{brown_hci_2017,
	title = {{HCI} - The Story So Far},
	url = {https://web.cs.wpi.edu/ dcb/courses/CS3041/the-story.html#tasks},
	author = {Brown, David},
	date = {2017-05}
}

@software{janczuk_edgejs_2017,
	location = {{GitHub}},
	title = {Edge.js},
	url = {https://tjanczuk.github.io/edge/#/},
	author = {Janczuk, Tomasz},
	date = {2017-08}
}

@online{mueller_openjscad_2018,
	title = {{OpenJSCad}},
	url = {https://openjscad.org/},
	author = {Mueller, Rene and Moissette, Mark},
	date = {2018-04}
}

@software{bjorke_helix_2020,
	location = {{GitHub}},
	title = {Helix Toolkit},
	url = {https://github.com/helix-toolkit/helix-toolkit},
	author = {Bjorke, Oystein and Ansel, Jeremy},
	date = {2020-05}
}

@online{nielsen_10_1994,
	title = {10 Heuristics for User Interface Design},
	url = {https://www.nngroup.com/articles/ten-usability-heuristics/},
	abstract = {Jakob Nielsen's 10 general principles for interaction design. They are called "heuristics" because they are broad rules of thumb and not specific usability guidelines.},
	author = {Nielsen, Jakob},
	date = {1994-04}
}

@online{rasmussen_drawing_2015,
	title = {Drawing Gears - Circular and Non Circular},
	url = {https://www.codeproject.com/Articles/1037482/Drawing-Gears-Circular-and-Non-Circular},
	abstract = {Learn about gears and by using the jpg's be able to cut working gears in wood and other materials},
	author = {Rasmussen, Lars},
	date = {2015-10-08}
}

@book{stone_user_2005,
	title = {User Interface Design and Evaluation},
	pagetotal = {704},
	publisher = {Morgan Kaufmann Publishers},
	author = {Stone, Debbie and Jarrett, Caroline and Woodroffe, Mark and Minocha, Shailey},
	date = {2005-03-22}
}

@book{microsoft_visual_2003,
	location = {Redmond, {WA}},
	title = {Visual Studio 2003 Retired Technical Documentation},
	series = {Visual Studio .{NET}},
	pagetotal = {10503},
	publisher = {Microsoft},
	author = {{Microsoft}},
	date = {2003}
}

@book{nathan_windows_2006,
	edition = {1st},
	title = {Windows Presentation Foundation Unleashed},
	isbn = {978-0-672-32891-6},
	pagetotal = {656},
	publisher = {Sams Publishing},
	author = {Nathan, Adam and Lehenbauer, Daniel},
	date = {2006-12-31}
}

@online{allen_wpf_2014,
	title = {A {WPF} Q\&A},
	url = {https://www.infoq.com/news/2014/04/WPF-QA/},
	abstract = {A panel of 9 Microsoft desktop developers were available during a lunch time Q\&A. This session was not filmed, but we were able to record some of the {WPF} questions and Microsoft’s answers.},
	author = {Allen, Jonathan},
	date = {2014-04-03}
}

@online{wenzel_common_2019,
	title = {Common Language Runtime ({CLR}) overview - .{NET} Framework},
	url = {https://docs.microsoft.com/en-us/dotnet/standard/clr},
	abstract = {Get started with common language runtime ({CLR}), the .{NET} run-time environment. The {CLR} runs code and provides services to make the development process easier.},
	author = {Wenzel, Maira and Jin, Yisheng},
	date = {2019-04-02}
}

@online{lander_introducing_2019,
	title = {Introducing .{NET} 5},
	url = {https://devblogs.microsoft.com/dotnet/introducing-net-5/},
	abstract = {Today, we’re announcing that the next release after .{NET} Core 3.0 will be .{NET} 5. This will be the next big release in the .{NET} family. There will be just one .{NET} going forward, and you will be able to use it to target Windows,},
	author = {Lander, Richard},
	date = {2019-05-06}
}

@video{radhakrishnan_introduction_2020,
	location = {Worcester, {MA}},
	title = {Introduction to Gears Videos},
	publisher = {Mechanical Engineering Department, Worcester Polytechnic Institute},
	author = {Radhakrishnan, Pradeep},
	date = {2020}
}

@online{vincze_involute_2014,
	title = {Involute spur gear generator and simulator},
	url = {https://geargenerator.com/},
	abstract = {Gear Generator is a tool for creating involute spur gears and download them in {SVG} format. In addition it let you compose full gear layouts with connetcted gears to design multiple gears system with control of the input/output ratio and rotation speed. Gears can be animated with various speed to demonstrate working mechanism},
	author = {Vincze, Abel},
	date = {2014}
}

@online{kulikov_history_2020,
	title = {The History of C\#},
	url = {https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-version-history},
	author = {Kulikov, Petr and Wagner, Bill},
	date = {2020-04-08}
}

@book{ecma_international_c_2017,
	location = {Geneva},
	edition = {5th},
	title = {C\# Language Specification},
	url = {https://www.ecma-international.org/publications/files/ECMA-ST/ECMA-334.pdf},
	pagetotal = {516},
	publisher = {Ecma International},
	author = {{Ecma International}},
	date = {2017-12}
}

@article{smith_patterns_2009,
	title = {Patterns - {WPF} Apps With The Model-View-{ViewModel} Design Pattern},
	volume = {24},
	url = {https://docs.microsoft.com/en-us/archive/msdn-magazine/2009/february/patterns-wpf-apps-with-the-model-view-viewmodel-design-pattern},
	number = {2},
	journaltitle = {Microsoft Developer Networ},
	author = {Smith, Josh},
	date = {2009-02}
}

@online{dassault_systemes_3d_2021,
	title = {3D {CAD} Design Software {\textbar} {SOLIDWORKS}},
	url = {https://www.solidworks.com/home-page-2021},
	abstract = {Dassault Systèmes {SOLIDWORKS} Corp. develops and markets 3D {CAD} design software, analysis software, and product data management software. {SOLIDWORKS} is the leading supplier of 3D {CAD} product design engineering software.},
	titleaddon = {{SOLIDWORKS}},
	author = {{Dassault Systemes}},
	date = {2021},
	langid = {english}
}

@online{lee_xaml_2020,
	title = {{XAML} overview},
	url = {https://docs.microsoft.com/en-us/visualstudio/xaml-tools/xaml-overview},
	abstract = {Learn basic information about {XAML} and the {XAML} code editor and {XAML} Designer tools in Visual Studio.},
	titleaddon = {Visual Studio Docs},
	author = {Lee, Terry and Hogenson, Gordon},
	date = {2020-06-23},
	langid = {english},
	file = {Snapshot:C\:\\Users\\Kyle Smith\\Zotero\\storage\\2495UHW9\\xaml-overview.html:text/html}
}

@online{hunter_net_2019,
	title = {.{NET} Core is the Future of .{NET}},
	url = {https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/},
	abstract = {We introduced .{NET} Core 1.0 on November 2014. The goal with .{NET} Core was to take the learning from our experience building, shipping and servicing .{NET} Framework over the previous 12 years and build a better product. Some examples of these improvements are side-by-side installations (you can install a new version and not worry about breaking existing apps),},
	titleaddon = {.{NET} Blog},
	author = {Hunter, Scott},
	date = {2019-05-06},
	langid = {american},
	file = {Snapshot:C\:\\Users\\Kyle Smith\\Zotero\\storage\\PIZFAZVC\\net-core-is-the-future-of-net.html:text/html}
}

@online{toub_performance_2017,
	title = {Performance Improvements in .{NET} Core},
	url = {https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-core/},
	abstract = {Update (2017/06/12): Added {BenchmarkDotNet} blog post link. There are many exciting aspects to .{NET} Core (open source, cross platform, x-copy deployable, etc.) that have been covered in posts on this blog before. To me, though, one of the most exciting aspects of .{NET} Core is performance.},
	titleaddon = {.{NET} Blog},
	author = {Toub, Stephen},
	date = {2017-06-07},
	langid = {american},
	file = {Snapshot:C\:\\Users\\Kyle Smith\\Zotero\\storage\\X9QWUNLA\\performance-improvements-in-net-core.html:text/html}
}

@book{clark_gantt_1922,
	title = {The Gantt chart, a working tool of management},
	url = {http://archive.org/details/cu31924004570853},
	abstract = {The metadata below describe the original scanning. Follow the "All Files: {HTTP}" link in the "View the book" box to the left to find {XML} files that contain more metadata about the original images and the derived formats ({OCR} results, {PDF} etc.). See also the What is the directory structure for the texts? {FAQ} for information about file content and naming conventions.},
	pagetotal = {184},
	publisher = {New York, The Ronald press company},
	author = {Clark, Wallace and Polakov, Walter Nicholas and Trabold, Frank W.},
	editora = {{Cornell University Library}},
	editoratype = {collaborator},
	date = {1922},
	keywords = {Industrial efficiency}
}